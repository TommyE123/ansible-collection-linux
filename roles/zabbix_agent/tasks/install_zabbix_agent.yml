---

- name: "install zabbix agent | Debian family"
  block:
    - name: "| Get codename"
      ansible.builtin.command: lsb_release -sc
      register: codename
      changed_when: False

    - name: "| (debug) Show codename (Debian family)"
      ansible.builtin.debug:
        var: codename.stdout
      when: codename.stdout is defined and codename.stdout | trim | length > 0

    - name: "| Download Zabbix release file (Debian family)"
      ansible.builtin.get_url:
        url: |-
          http://repo.zabbix.com/zabbix/{{ agent_version }}/{{ ansible_distribution | lower -}}
          /pool/main/z/zabbix-release/zabbix-release_{{ agent_version }}-1+{{ codename.stdout }}_all.deb
        dest: /tmp/zabbix-release.deb
        validate_certs: "{{ repo_dl_validate_certs | bool }}"
        mode: 0644

    - name: "| Install Zabbix release (Debian family)"
      ansible.builtin.apt:
        deb: "/tmp/zabbix-release.deb"
  when: ansible_os_family == "Debian"

- name: "install zabbix agent | Install Zabbix release (RedHat family 7 or lower)"
  ansible.builtin.yum:
    name: |-
      http://repo.zabbix.com/zabbix/{{ agent_version }}/rhel/7/x86_64/zabbix-release-{{ agent_version -}}
      -1.el7.noarch.rpm
    state: present
    validate_certs: "{{ repo_dl_validate_certs | bool }}"
  when: ansible_os_family == "RedHat" and ansible_distribution_major_version | int <= 7

- name: "install zabbix agent | Set fact for Zabbix agent v2"
  ansible.builtin.set_fact:
    zabbix_agent_daemon_name: zabbix-agent2
  when: (install_v2_agent and not force_install_agent_v1) and (ansible_os_family == "Archlinux" or
    (ansible_distribution == "Ubuntu" and ansible_distribution_major_version | int >= 18) or
    (ansible_distribution == "Debian" and ansible_distribution_major_version | int >= 9) or
    (ansible_distribution == "CentOS" and ansible_distribution_major_version | int >= 6))

- name: "install zabbix agent | Install Zabbix agent package"
  ansible.builtin.package:
    name: "{{ zabbix_agent_daemon_name }}"
    update_cache: True
  when: ansible_os_family != "Archlinux"

- name: "install zabbix agent | Install Zabbix Agent (ArchLinux)"
  block:
    - name: "| Get archive.archlinux.org index (ArchLinux)"
      ansible.builtin.get_url:
        url: https://archive.archlinux.org/packages/z/{{ zabbix_agent_daemon_name }}/
        dest: /tmp/zabbix_agent.html
        mode: 0644
        validate_certs: "{{ repo_dl_validate_certs | bool }}"

    - name: "| Filter archive.archlinux.org index content (ArchLinux)"
      ansible.builtin.shell: |
        set -e -o pipefail
        cat /tmp/zabbix_agent.html | grep "{{ agent_version }}"
      args:
        executable: /bin/bash
      changed_when: False
      register: get_url_results

    - name: "| Set fact for extracted package filename (ArchLinux)"
      ansible.builtin.set_fact:
        package_filename: |-
          {{ get_url_results.stdout_lines | reject('search', '.sig') | last | regex_replace('(.+">)|(<\/a>.+)', '') -}}

    - name: "| (debug) Show package filename (ArchLinux)"
      ansible.builtin.debug:
        var: package_filename

    - name: "| Download required zabbix-agent package (ArchLinux)"
      ansible.builtin.get_url:
        url: https://archive.archlinux.org/packages/z/{{ zabbix_agent_daemon_name }}/{{ package_filename }}
        dest: /tmp/{{ package_filename }}
        mode: 0644
        validate_certs: "{{ repo_dl_validate_certs | bool }}"

  # I found some strange things installing agent v2 5.0 on Arch Linux when agent v1 6.2 also will be installed because
  # of dependencies. So i put special clean-up of agent v1. Hope it helps. Otherwise you can install using bsdtar like:
  #
  #  - name: "| Install zabbix-agent package using bsdtar (ArchLinux)"
  #    ansible.builtin.command: bsdtar -C / -xvf /tmp/{{ package_filename }}
  #  - name: "| Systemctl daemon reload (ArchLinux)"
  #    ansible.builtin.command: systemctl daemon-reload

    - name: "| Install packages required packages (ArchLinux)"
      community.general.pacman:
        name: /tmp/{{ package_filename }}
        state: present

    - name: "| Remove zabbix agent v1 package (workaround of incorrect dependencies) (ArchLinux)"
      community.general.pacman:
        name: zabbix-agent
        state: absent
        force: True
      when: zabbix_agent_daemon_name == 'zabbix-agent2'

    - name: "| Cleanup zabbix-agent package (ArchLinux)"
      ansible.builtin.file:
        path: /tmp/{{ package_filename }}
        state: absent
  when: ansible_os_family == "Archlinux"

- name: "install zabbix agent | Check systemd present in the system"
  ansible.builtin.command: systemctl --version    # noqa command-instead-of-module
  register: systemctl_check
  changed_when: False
  ignore_errors: True

- name: "install zabbix agent | Start and enable zabbix agent daemon (on linux distributions with systemd)"
  ansible.builtin.systemd:
    name: "{{ zabbix_agent_daemon_name }}"
    state: started
    enabled: True
  when: not systemctl_check.failed
